#################################################
# 3.2 Container Registry 활용 (실습)
#################################################
$ docker login sds.redii.net   
  Username: k8s.edu
  Password: roqkf12#
  
$ docker logout sds.redii.net

$ docker pull sds.redii.net/k8s-edu/nginx:v1

### 사용자에 고유한 Tag ID 사용 : v1 대신 user1~20
$ docker tag sds.redii.net/k8s-edu/nginx:v1 sds.redii.net/k8s-edu/nginx:user1 

$ docker images

$ docker push sds.redii.net/k8s-edu/nginx:user1  


#################################################
# 4.2 Dockerfile 
#################################################

# dockerfile 작성

$ cd

$ pwd
/c/Users/SDS

$ mkdir dockerbuild

$ cd dockerbuild
$ vi dockerfile

FROM sds.redii.net/k8s-edu/alpine:latest
MAINTAINER k8s.edu <k8s.edu@samsung.com>
COPY testfile.txt /

$ echo testdata > testfile.txt

$ docker build -t sds.redii.net/k8s-edu/alpine:v1 .
Sending build context to Docker daemon  3.072kB
Step 1/3 : FROM sds.redii.net/k8s-edu/alpine:latest
 ---> 3fd9065eaf02
………….

$ docker images
............

$ docker run -it --rm sds.redii.net/k8s-edu/alpine:v1 /bin/sh
/ # ls
bin           home          mnt           run           sys           usr
dev           lib           proc          sbin          testfile.txt  var
etc           media         root          srv           tmp
/ # cat testfile.txt
testdata
/ # exit

#################################################
# 4.3 Docker Image 관리 (실습) 
#################################################

$ docker pull sds.redii.net/k8s-edu/alpine:latest

### 사용자에 고유한 Tag ID 사용 : v1 대신 user1~20
$ docker tag sds.redii.net/k8s-edu/alpine:v1 sds.redii.net/k8s-edu/alpine:user1
$ docker push sds.redii.net/k8s-edu/alpine:user1 

$ docker images

### 사용자에 고유한 Tag ID 사용 : v1 대신 user1~20
$ docker history sds.redii.net/k8s-edu/alpine:user1

$ docker inspect sds.redii.net/k8s-edu/alpine:v1

$ ocker rmi sds.redii.net/k8s-edu/alpine:v1

#################################################
# 4.4 Docker Container 관리 
#################################################

$ docker run -it --name nginx sds.redii.net/k8s-edu/nginx:v1 /bin/bash
root@3247526c7c3f: /# ls -l
# 입력모드 out : CTRL p+q 2번

$ docker ps
# docker stop <container ID or Name>
$ docker stop 554eaafc9de6 혹은 $ docker stop nginx 
$ docker ps  
$ docker ps -a
$ docker start nginx
$ docker ps
$ docker commit nginx sds.redii.net/k8s-edu/nginx:commit

$ docker exec -it nginx /bin/bash
root@554eaafc9de6:/# echo "hello"
hello

$ docker exec nginx echo "hello"
hello

$ docker rm 5c8b77c4f824
Error response from daemon: You cannot remove a running container 5c8b77c4f8243f8b716f021dd51d4359bc9b54dc9eb9b9834a74ca318ec0e004. Stop the container before attempting removal or force remove

$ docker ps
CONTAINER ID                     IMAGE                        NAMES
5c8b77c4f824        sds.redii.net/k8s-edu/nginx:v1     nginx

$ docker stop 5c8b77c4f824
5c8b77c4f824

$ docker ps
CONTAINER ID        IMAGE           NAMES

$ docker ps -a
CONTAINER ID                       IMAGE                          NAMES            
5c8b77c4f824        sds.redii.net/k8s-edu/nginx:v1         nginx

$ docker rm 5c8b77c4f824
5c8b77c4f824

$ docker ps -a
CONTAINER ID                       IMAGE                          NAMES

$ docker run -d -p 80:80 --name nginxweb sds.redii.net/k8s-edu/nginx:v1
$ docker run -it –-rm --name nginxweb sds.redii.net/k8s-edu/nginx:v1 /bin/bash

#################################################
# 5.2 Docker Volume 관리 (실습)
#################################################

$ docker run --name nginx-vol -v /c/Users/SDS/nginxlog:/var/log/nginx -d -p 80:80 sds.redii.net/k8s-edu/nginx:v1
$ docker exec -it nginx-vol /bin/bash

#<Container 내부 접속)
root@6e466f0db129:/# cd /var/log/nginx
root@6e466f0db129:/var/log/nginx# ls
access.log  error.log
root@6e466f0db129:/var/log/nginx# cat access.log

#<Container 나가기 ctrl p+q>
$ docker volume ls

$ docker volume create log-volume
$ docker run --name nginx-vol1 -v log-volume:/var/log/nginx -d -p 80:80 sds.redii.net/k8s-edu/nginx:v1

$ docker volume ls

$ docker volume inspect log-volume

$ docker volume rm log-volume

$ docker-machine ssh default
$ sudo –i
$ cd /var/lib/docker/volumes
$ ls

#################################################
# 6.2 Docker Network 구조
#################################################
$ docker-machine ssh default
docker@default:~$ ifconfig docker0
docker@default:~$ docker inspect bridge 
$ docker network ls  
$ docker inspect <container id or name>

$ docker network create backend
$ docker network ls
$ docker network inspect backend
$ docker network rm backend

#################################################
# 6.3 Port Mapping & EXPOSE
#################################################

$ docker ps
$ docker inspect <container id or name>
$ docker port <container id or name>

#################################################
# 7.2 주요 관리 명령어
#################################################

$ docker events --since '2017-01-05' 
$ docker events --since '2017-01-05'  | grep 288deb28a221f3   <Container ID>

$ docker stats 

docker logs -f nginx 
